
/**
 * Функция для поиска в переданном массиве пары чисел, сумма которых равняется переданному числу, сложность алгоритма O(n).
 * Суть: для решения использован объект JS в качестве хэш-таблицы, в которую помещаются элементы массива и их индексы.
 * Так как хэш таблицы предполагают наличие только уникальных элементов, то и передаваемый массив должен состоять из
 * уникальных чисел.
 * Обычная средняя сложность для хэш-таблицы составляет O(1), но так как в нашей задаче 2 неизвестных, то нам приходится
 * пройти по всем элементам таблицы в поисках нужной пары, что и дает O(n).
 * @param {Array} arr - массив из НЕПОВТОРЯЮЩИХСЯ чисел;
 * @param {number} num - число, которое должно получиться от сложения двух элементов массива;
 * @returns индексы элементов массива, чья сумма дает введенное число, либо null в случае отсутствия таких элементов.
 */
const sum = (arr, num = 0) => {
	const obj = {};

	// наполнение хэш-таблицы
	for (let i = 0; i < arr.length; i++) {
		obj[arr[i]] = i;
	}

	for (let key in obj) {
		if (obj[num - key] && obj[num - key] !== obj[key]) {
			return `Сумма элементов под индексами ${obj[key]} и ${obj[num - key]} равна искомому числу ${num}`;
		}
	}
	return null;
}
